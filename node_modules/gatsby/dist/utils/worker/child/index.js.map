{"version":3,"sources":["../../../../src/utils/worker/child/index.ts"],"names":["isWorker","global","__GATSBY","process","env","GATSBY_NODE_GLOBALS","JSON","parse"],"mappings":";;;;;AAAA;;AACA;;AACA;;AAaA;;;;;AACA;;;;;AACA;;;;;;AACA;;;AAdA;AACA,+C,CAEA;;AACA,IAAIA,sBAAJ,EAAc;AACZC,EAAAA,MAAM,CAACC,QAAP,GAAkBC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,GACdC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACC,GAAR,CAAYC,mBAAvB,CADc,GAEd,EAFJ;AAGD,C,CAED","sourcesContent":["import { isWorker } from \"gatsby-worker\"\nimport { initJobsMessagingInWorker } from \"../../jobs/worker-messaging\"\nimport { initReporterMessagingInWorker } from \"../reporter\"\n\ninitJobsMessagingInWorker()\ninitReporterMessagingInWorker()\n\n// set global gatsby object like we do in develop & build\nif (isWorker) {\n  global.__GATSBY = process.env.GATSBY_NODE_GLOBALS\n    ? JSON.parse(process.env.GATSBY_NODE_GLOBALS)\n    : {}\n}\n\n// Note: this doesn't check for conflicts between module exports\nexport { renderHTMLProd, renderHTMLDev } from \"./render-html\"\nexport { setInferenceMetadata, buildSchema } from \"./schema\"\nexport { setComponents, runQueries, saveQueriesDependencies } from \"./queries\"\nexport { loadConfigAndPlugins } from \"./load-config-and-plugins\"\n"],"file":"index.js"}