import { StringComparisonOperator, DateComparisonOperator } from "../../../../types/common";
declare const _default: (req: any, res: any) => Promise<void>;
/**
 * @oas [get] /product-types
 * operationId: "GetProductTypes"
 * summary: "List Product Types"
 * description: "Retrieve a list of Product Types."
 * x-authenticated: true
 * parameters:
 *   - (query) limit {string} The number of types to return.
 *   - (query) offset {string} The offset of types to return.
 *   - (query) value {string} The value of types to return.
 *   - (query) id {string} The id of types to return.
 *   - (query) created_at {DateComparisonOperator} Date comparison for when resulting tas was created, i.e. less than, greater than etc.
 *   - (query) updated_at {DateComparisonOperator} Date comparison for when resulting tas was updated, i.e. less than, greater than etc.
 * tags:
 *   - Product Tag
 * responses:
 *  "200":
 *    description: OK
 *    content:
 *      application/json:
 *        schema:
 *          properties:
 *            types:
 *              $ref: "#/components/schemas/product_tag"
 */
export default _default;
export declare class AdminGetProductTypesPaginationParams {
    limit?: number | undefined;
    offset?: number | undefined;
}
export declare class AdminGetProductTypesParams extends AdminGetProductTypesPaginationParams {
    id?: string | string[] | StringComparisonOperator;
    value?: string | string[] | StringComparisonOperator;
    created_at?: DateComparisonOperator;
    updated_at?: DateComparisonOperator;
    order?: string;
}
