import { NumericalComparisonOperator } from "../../../../types/common";
declare const _default: (req: any, res: any) => Promise<void>;
/**
 * @oas [get] /tax-rates
 * operationId: "GetTaxRates"
 * summary: "List Tax Rates"
 * description: "Retrieves a list of TaxRates"
 * x-authenticated: true
 * parameters:
 *   - (query) q {string} Query used for searching orders.
 *   - (query) id {string} Id of the order to search for.
 *   - (query) region_id {string} to search for.
 *   - (query) code {string} to search for.
 *   - (query) rate {string} to search for.
 *   - (query) created_at {DateComparisonOperator} Date comparison for when resulting orders was created, i.e. less than, greater than etc.
 *   - (query) updated_at {DateComparisonOperator} Date comparison for when resulting orders was updated, i.e. less than, greater than etc.
 *   - (query) offset {string} How many orders to skip in the result.
 *   - (query) limit {string} Limit the number of orders returned.
 *   - (query) fields {string} (Comma separated) Which fields should be included in each order of the result.
 * tags:
 *   - Order
 * responses:
 *   200:
 *     description: OK
 *     content:
 *       application/json:
 *         schema:
 *           properties:
 *             orders:
 *               type: array
 *               items:
 *                 $ref: "#/components/schemas/order"
 */
export default _default;
export declare class AdminGetTaxRatesParams {
    region_id?: string | string[];
    name?: string;
    code?: string;
    rate?: number | NumericalComparisonOperator;
    offset?: number | undefined;
    limit?: number | undefined;
    expand?: string[];
    fields?: string[];
}
