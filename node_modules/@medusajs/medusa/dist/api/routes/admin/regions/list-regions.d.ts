import { DateComparisonOperator } from "../../../../types/common";
declare const _default: (req: any, res: any) => Promise<void>;
/**
 * @oas [get] /regions
 * operationId: "GetRegions"
 * summary: "List Regions"
 * description: "Retrieves a list of Regions."
 * x-authenticated: true
 * parameters:
 *  - in: query
 *    name: limit
 *    schema:
 *      type: integer
 *    required: false
 *    description: limit the number of regions in response
 *  - in: query
 *    name: offset
 *    schema:
 *      type: integer
 *    required: false
 *    description: Offset of regions in response (used for pagination)
 * - in: query
 *    name: created_at
 *    schema:
 *      type: DateComparisonOperator
 *    required: false
 *    description: Date comparison for when resulting region was created, i.e. less than, greater than etc.
 * - in: query
 *    name: updated_at
 *    schema:
 *      type: DateComparisonOperator
 *    required: false
 *    description: Date comparison for when resulting region was updated, i.e. less than, greater than etc.
 * - in: query
 *    name: deleted_at
 *    schema:
 *      type: DateComparisonOperator
 *    required: false
 *    description: Date comparison for when resulting region was deleted, i.e. less than, greater than etc.
 * tags:
 *   - Region
 * responses:
 *   200:
 *     description: OK
 *     content:
 *       application/json:
 *         schema:
 *           properties:
 *             regions:
 *               type: array
 *               items:
 *                 $ref: "#/components/schemas/region"
 */
export default _default;
export declare class AdminGetRegionsPaginationParams {
    limit?: number;
    offset?: number;
}
export declare class AdminGetRegionsParams extends AdminGetRegionsPaginationParams {
    created_at?: DateComparisonOperator;
    updated_at?: DateComparisonOperator;
    deleted_at?: DateComparisonOperator;
}
