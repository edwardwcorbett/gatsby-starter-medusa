import { StoreGetProductsParams, StorePostSearchReq, StorePostSearchRes, StoreProductsListRes, StoreProductsRes } from "@medusajs/medusa";
import { ResponsePromise } from "../typings";
import BaseResource from "./base";
import ProductVariantsResource from "./product-variants";
declare class ProductsResource extends BaseResource {
    variants: ProductVariantsResource;
    /**
     * @description Retrieves a single Product
     * @param {string} id is required
     * @param customHeaders
     * @return {ResponsePromise<StoreProductsRes>}
     */
    retrieve(id: string, customHeaders?: Record<string, any>): ResponsePromise<StoreProductsRes>;
    /**
     * @description Searches for products
     * @param {StorePostSearchReq} searchOptions is required
     * @param customHeaders
     * @return {ResponsePromise<StorePostSearchRes>}
     */
    search(searchOptions: StorePostSearchReq, customHeaders?: Record<string, any>): ResponsePromise<StorePostSearchRes>;
    /**
     * @description Retrieves a list of products
     * @param {StoreGetProductsParams} query is optional. Can contain a limit and offset for the returned list
     * @param customHeaders
     * @return {ResponsePromise<StoreProductsListRes>}
     */
    list(query?: StoreGetProductsParams, customHeaders?: Record<string, any>): ResponsePromise<StoreProductsListRes>;
}
export default ProductsResource;
