import { AdminGetProductsParams, AdminPostProductsProductMetadataReq, AdminPostProductsProductOptionsOption, AdminPostProductsProductOptionsReq, AdminPostProductsProductReq, AdminPostProductsProductVariantsReq, AdminPostProductsProductVariantsVariantReq, AdminPostProductsReq, AdminProductsDeleteOptionRes, AdminProductsDeleteRes, AdminProductsDeleteVariantRes, AdminProductsListRes, AdminProductsListTagsRes, AdminProductsListTypesRes, AdminProductsRes } from "@medusajs/medusa";
import { ResponsePromise } from "../../typings";
import BaseResource from "../base";
declare class AdminProductsResource extends BaseResource {
    create(payload: AdminPostProductsReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    retrieve(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    update(id: string, payload: AdminPostProductsProductReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    delete(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsDeleteRes>;
    list(query?: AdminGetProductsParams, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsListRes>;
    listTypes(customHeaders?: Record<string, any>): ResponsePromise<AdminProductsListTypesRes>;
    listTags(customHeaders?: Record<string, any>): ResponsePromise<AdminProductsListTagsRes>;
    setMetadata(id: string, payload: AdminPostProductsProductMetadataReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    createVariant(id: string, payload: AdminPostProductsProductVariantsReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    updateVariant(id: string, variantId: string, payload: AdminPostProductsProductVariantsVariantReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    deleteVariant(id: string, variantId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsDeleteVariantRes>;
    addOption(id: string, payload: AdminPostProductsProductOptionsReq, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    updateOption(id: string, optionId: string, payload: AdminPostProductsProductOptionsOption, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsRes>;
    deleteOption(id: string, optionId: string, customHeaders?: Record<string, any>): ResponsePromise<AdminProductsDeleteOptionRes>;
}
export default AdminProductsResource;
