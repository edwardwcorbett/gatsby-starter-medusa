import { AdminDeleteUserRes, AdminResetPasswordRequest, AdminResetPasswordTokenRequest, AdminUserRes, AdminUsersListRes } from "@medusajs/medusa";
import { ResponsePromise, AdminCreateUserPayload, AdminUpdateUserPayload } from "../..";
import BaseResource from "../base";
declare class AdminUsersResource extends BaseResource {
    /**
     * @description resets password by re-sending password token.
     * @param payload payload for generating reset-password token.
     * @param customHeaders
     * @returns
     */
    sendResetPasswordToken(payload: AdminResetPasswordTokenRequest, customHeaders?: Record<string, any>): ResponsePromise<void>;
    /**
     * @description resets the users password given the correct token.
     * @param payload reset password information.
     * @param customHeaders
     * @returns
     */
    resetPassword(payload: AdminResetPasswordRequest, customHeaders?: Record<string, any>): ResponsePromise<AdminUserRes>;
    /**
     * Retrieves a given user
     * @param id id of the user
     * @param customHeaders
     * @returns the user
     */
    retrieve(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminUserRes>;
    /**
     * @description creates a user with the provided information
     * @param payload user creation request body
     * @param customHeaders
     * @returns created user
     */
    create(payload: AdminCreateUserPayload, customHeaders?: Record<string, any>): ResponsePromise<AdminUserRes>;
    /**
     * @description updates a given user
     * @param id id of the user to update
     * @param payload user update request body
     * @param customHeaders
     * @returns the updated user
     */
    update(id: string, payload: AdminUpdateUserPayload, customHeaders?: Record<string, any>): ResponsePromise<AdminUserRes>;
    /**
     * @description deletes a user
     * @param id id of the user to be deleted
     * @param customHeaders
     * @returns delete response
     */
    delete(id: string, customHeaders?: Record<string, any>): ResponsePromise<AdminDeleteUserRes>;
    /**
     * @description lists all users
     * @returns a list of all users
     */
    list(customHeaders?: Record<string, any>): ResponsePromise<AdminUsersListRes>;
}
export default AdminUsersResource;
